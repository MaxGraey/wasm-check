"use strict";function e(e){return t(e,!1)}function t(e,t=!0,o="0",i={}){if(!n)return!1;const s=e.buffer;let u=r.get(s);if(null==u){if(u=WebAssembly.validate(s),u&&t)try{new WebAssembly.Instance(new WebAssembly.Module(s),i).exports[o]()}catch(e){u=!1}r.set(s,u)}return u}let r=new WeakMap;const n="object"==typeof WebAssembly&&"function"==typeof WebAssembly.validate,o="function"==typeof BigInt64Array,i=n&&"function"==typeof WebAssembly.instantiateStreaming,s=n&&"function"==typeof WebAssembly.Function,u=n&&"function"==typeof WebAssembly.Memory.type,f=n&&"function"==typeof SharedArrayBuffer,a=Uint32Array.of(1836278016,1,1610679553,58589440,117440770,805372165,101318656,1107297281,268438272,1835101700,17039717,36700416,259),y=Uint16Array.of(24832,28019,1,0,1025,24577,0,515,1,773,1,2561,269,11,65,65,65,3068,2816,2560,28164,28001,613,259,0),l=Uint16Array.of(24832,28019,1,0,1025,24577,0,515,1,781,1,2560,265,7,16390,2311,2827,2560,28164,28001,613,259,0),b=Uint32Array.of(1836278016,1,2130773510,184566017,16844039,865,1634599944,16934253,0),A=Uint16Array.of(24832,28019,1,0,1537,24577,512,32639,515,1,2058,1537,16640,16640,2816,2560,28164,28001,613,259,0),c=Uint16Array.of(24832,28019,1,0,1025,24577,0,515,1,3082,2561,17152,0,0,252,2842,4096,28164,28001,357,260,256,627,259,0),g=Uint16Array.of(24832,28019,1,0,1025,24577,0,515,1,2058,1537,16640,49152,2842,4096,28164,28001,357,260,256,560,259,0),p=Uint32Array.of(1836278016,1,1610679297,33751040,101318657,301990913,268438272,1835101700,17039717,40239360,259),m=Uint8Array.of(0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,7,1,5,0,254,3,0,11,0,10,4,110,97,109,101,2,3,1,0,0),U=Uint32Array.of(1836278016,1,1610679297,33751040,84344833,6357249,17369600,4259847,186257917,1845758464,40201569,259),W=Uint8Array.of(0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,7,1,5,0,208,112,26,11,0,10,4,110,97,109,101,2,3,1,0,0);module.exports={support:(t=1)=>e(Uint32Array.of(1836278016,t)),get supportStreaming(){return i},feature:{get bigInt(){return o&&t(a)},get bulk(){return e(y)},get exceptions(){return e(l)},get mutableGlobals(){return e(b)},get multiValues(){return e(A)},get saturateConversions(){return e(c)},get signExtensions(){return e(g)},get tailCalls(){return e(p)},get threads(){return f&&e(m)},get simd(){return e(U)},get references(){return e(W)},get typeReflection(){return u},get functionReferences(){return s}}};